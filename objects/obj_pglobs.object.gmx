<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.d_cd = false;
global.brooma = false;
global.bk = false;
global.combat = 0;
once = false;
alarm_2 = false;

for(i = 0; i &lt; 8; i += 1){
    for(j = 0; j &lt; 8; j += 1){
        global.level_room_types[i,j] = 'none';
    }
}

global.level_room_types[4,4] = 'start';
dead = false;

//Stats
global.p_maxhp = 20;
global.p_hp = 20;
global.p_atk = 5;
global.p_def = 5;
global.p_satk = 5;
global.p_sdef = 5;
global.p_spd = 4;


//Equipables
    ///Spawned
    global.selectc_0 = false;
    global.selectc_1 = false;
    global.selectc_2 = false;
    global.selectc_3 = false;
    global.selectc_4 = false;
    global.selectc_5 = false;
    
    ///Equipped
    global.eq_0 = false;
    global.eq_1 = false;
    global.eq_2 = false;
    global.eq_3 = false;
    global.eq_4 = false;
    global.eq_5 = false;
    
    //Counted
    eq_0c = false;
    eq_1c = false;

//Statuses
status_check = true;
global.st_poison = false;
global.st_stuck = false;

global.p_inv = false;

///Status duration
global.st_poison_d = 0;
global.st_stuck_d = 0;

//Current Room
global.current_column = 4;
global.current_row = 4;

//Manel is doing a thing... Dont be mad...
global.char = 0;

///Player Character body sprites
global.char_bsprs[0,0] = spr_body_up;
global.char_bsprs[0,1] = spr_body_down;
global.char_bsprs[0,2] = spr_body_side;
global.char_bsprs[0,3] = spr_body_still;
global.char_bsprs[0,4] = spr_roll_up;
global.char_bsprs[0,5] = spr_roll_down;
global.char_bsprs[0,6] = spr_roll_side;

///Player Character head sprites
global.char_hsprs[0] = spr_head;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm_2 = false;
global.p_inv = false;

with(obj_body){
    image_blend = c_white;
}
with(obj_head){
    image_blend = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>status_check = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_body){
    if global.p_inv == true{
        if obj_body.image_blend == c_white{
            with obj_body{
                image_blend = c_red;
            }
            with obj_head{
                image_blend = c_red;
            }
        
        }else if obj_body.image_blend == c_red{
            with obj_body{
                image_blend = c_white;
            }
            with obj_head{
                image_blend = c_white;
            }
        
      }
    
        if alarm_2 == false{
            alarm_2 = true;
            alarm[2] = 0.5 * room_speed;
       }
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_get_input();
depth = obj_body - 1;

if once == false{
    past_hp = global.p_hp;
    once = true;
}

///WIP
if(instance_exists(obj_body) &amp;&amp; !instance_exists(obj_gui)){
    instance_create(obj_body.x-240,obj_body.y-176,obj_gui);
}

///Item effects
if(global.eq_0 == true &amp;&amp; eq_0c == false){
    global.p_atk = global.p_atk + 2;
    eq_0c = true; 
}
if(global.eq_1 == true &amp;&amp; eq_1c == false){
    global.p_hp = global.p_maxhp;
    eq_1c = true;
}


///GUI
if(instance_exists(obj_body)){
if(global.p_hp &gt; global.p_maxhp*0.10*9 &amp;&amp; global.p_hp &lt;= global.p_maxhp){
    obj_gui.image_index = 0;
}
if(global.p_hp &gt; global.p_maxhp*0.10*8 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*9){
    obj_gui.image_index = 1;
}
if(global.p_hp &gt; global.p_maxhp*0.10*7 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*8){
    obj_gui.image_index = 2;
}
if(global.p_hp &gt; global.p_maxhp*0.10*6 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*7){
    obj_gui.image_index = 3;
}
if(global.p_hp &gt; global.p_maxhp*0.10*5 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*6){
    obj_gui.image_index = 4;
}
if(global.p_hp &gt; global.p_maxhp*0.10*4 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*5){
    obj_gui.image_index = 5;
}
if(global.p_hp &gt; global.p_maxhp*0.10*3 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*4){
    obj_gui.image_index = 6;
}
if(global.p_hp &gt; global.p_maxhp*0.10*2 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*3){
    obj_gui.image_index = 7;
}
if(global.p_hp &gt; global.p_maxhp*0.10*1 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*2){
    obj_gui.image_index = 8;
}
if(global.p_hp &gt; 0 &amp;&amp; global.p_hp &lt;= global.p_maxhp*0.10*1 ){
    obj_gui.image_index = 9;
}
if(global.p_hp == 0 &amp;&amp; instance_exists(obj_gui)){
    obj_gui.image_index = 10;
}
}

///Statuses
if status_check == true{
    if global.st_poison == true and global.st_poison_d &gt; 0{
        global.p_hp -= 1;
        global.st_poison_d -= 5;
        past_hp = global.p_hp;
        
        if global.st_poison_d &lt;= 0{
            global.st_poison = false;
        }
    }
    
    if global.st_stuck == true{
    
        if global.st_stuck_d &lt;= 0{
            global.st_stuck = false;
        }
    }
        
    status_check = false;
    alarm[1] = 1 * room_speed;
}

///Where am I?
if room == rm_level{
    if instance_exists(obj_body){
        global.current_column = obj_body.x div global.roomwd;
        global.current_row = obj_body.y div global.roomhg;
        
    }
}

///Death
if(global.p_hp &lt;= 0 &amp;&amp; dead == false){
    room_goto(rm_dead);
    dead = true;
}

///Game restart
if(room == rm_dead){
    if(interact_key == true){
        game_restart();
        
    }
   
}

///Game Won
if(global.bk == true &amp;&amp; room == rm_boss){
    alarm[0] = 15 * room_speed;
}

///Debug
if keyboard_check_pressed(vk_f11){
    room_goto(rm_boss);
}

if keyboard_check_pressed(vk_f4){
    room_goto(rm_CH_boss);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
