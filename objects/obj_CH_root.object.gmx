<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CH_root</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
image_speed = 0;

burrowed = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_CH_tree_state.state += 1;
swing = false;
jab = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x + 10 &lt; obj_CH_tree_state.x{
    mult = -1;
}else if x - 10 &gt; obj_CH_tree_state.x{
    mult = 1;
}else {
    mult = 2;
}

if obj_CH_tree_state.burrowed == true and obj_CH_tree_state.state == 1 and image_index &lt;= 8{
    visible = true;
    image_speed = 0.2;
    
}else if obj_CH_tree_state.burrowed == true and obj_CH_tree_state == 1 and (image_index == 8 or image_index == 9){
    sprite_index = spr_CH_root_idle;
    obj_CH_tree_state.burrowed = false;
} 

if obj_CH_tree_state.burrowed == false and obj_CH_tree_state.state == 3 and sprite_index != spr_CH_root{
    image_speed = -0.2;
    sprite_index = spr_CH_root;
    image_index = 9;
    
}else if obj_CH_tree_state.burrowed == false and obj_CH_tree_state == 3 and (image_index == 0 or image_index == 1){
    image_speed = 0;
    obj_CH_tree_state.burrowed = true;
    visible = false;
} 

if obj_CH_tree_state.burrowed == false{
    switch obj_CH_tree_state.state {
        case 1:
            if(sprite_index == spr_CH_root_idle and swing == false){
                if(abs(mult) == 1){
                    sprite_index = spr_CH_root_swing;
                    image_xscale = mult;
                }else   {
                    sprite_index = spr_CH_root_swing_d;
                }
                
                image_speed = 0.2;
                swing = true;
            }
            
            if((sprite_index == spr_CH_root_swing or sprite_index == spr_CH_root_swing_d) and image_index &gt; 15){
                sprite_index = spr_CH_root_idle;
                
                alarm[0] = 0.5 * room_speed;
            }
        
        break;
    
        case 2:
            if(sprite_index == spr_CH_root_idle and jab == false){
                if(abs(mult) == 1){
                    sprite_index = spr_CH_root_jab;
                    image_xscale = mult;
                }else   {
                    sprite_index = spr_CH_root_jab_d;
                }
                
                image_speed = 0.2;
                jab = true;
            }
            
            if((sprite_index == spr_CH_root_jab or sprite_index == spr_CH_root_jab_d) and (image_index &gt; 15)){
                sprite_index = spr_CH_root_idle;
                
                alarm[0] = 0.5 * room_speed;
            }
        
        break;

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,64</point>
    <point>0,64</point>
  </PhysicsShapePoints>
</object>
