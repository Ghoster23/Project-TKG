<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_skull_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialise the enemy
event_inherited();
visible = true;
solid = false;
depth = -y;
image_speed = 0;

trigger = false;
flash = false;
damaged = false;
go = false;
fl_go = false;
k = false;

//Stats
e_mhp = 10;
e_hp = 10;
e_atk = 10;
e_satk = 0;
e_def = 5;
e_sdef = 2;
e_spd = 7;

//States
state = 3;
atk_cd = false;
fl_dir = 'card';
casting = false;

///Directions
dir_change = true;
i_dir = 0;

///Wooble
t = 0;
inc = 5;
amp = 5;

//Animation of skull rising
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if casting == true and cont &gt;= 0{

switch cont {
    case 3:
        if fl_dir == 'card'{
            instance_create(x,y-24,obj_skull_fl);
        }else if fl_dir == 'diag'{
            instance_create(x+20,y-20,obj_skull_fl);
        }
                    
    break;
    case 2:
        if fl_dir == 'card'{
            instance_create(x-24,y,obj_skull_fl);
        }else if fl_dir == 'diag'{
            instance_create(x-20,y+20,obj_skull_fl);
        }
                
    break;
    case 1:
        if fl_dir == 'card'{
            instance_create(x,y+24,obj_skull_fl);
            fl_dir = 'diag';
        }else if fl_dir == 'diag'{
            instance_create(x-20,y-20,obj_skull_fl);
            fl_dir = 'card';
        }
        
        alarm[2] = 0.25 * room_speed;
    break;
}

    

    if cont &gt; 0{
        alarm[6] = 0.20 * room_speed;
        cont -= 1;
    }else {
        fl_go = true;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>go = true;
sprite_index = spr_skull_o;
image_speed = 0;
state = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = false;
damaged = false;
image_blend = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
dir_change = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fl_go == true{
    fl_go = false;
    alarm[2] = 0.25 * room_speed;
}else {
    casting = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk_cd = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state == 1 {
    var d_ = point_direction(x,y,obj_body.x,obj_body.y);
}else if state == 0{
    var d_ = i_dir;
}else {
    d_ = 666;
}

if (d_ &gt;= 0 and d_ &lt;= 45) or (d_ &gt;= 315 and d_ &lt;= 360){
    d = 1;
}else if d_ &gt; 45 and d_ &lt; 135{
    d = -3;
}else if d_ &gt;= 135 and d_ &lt;= 225{
    d = -1;
}else if d_ &gt; 225 and d_ &lt; 315{
    d = 3;
}else {
    d = 0;
}

if flash == false and casting == false{
switch d {
    case 0:
        break;
    case -1: //Left
        image_xscale = -1;
        image_index = 0;
        break;
    case -2: //Up and Right
        image_index = 2;
        break;
    case -3: //Up
        image_index = 2;
        break;
    case -4: //Up and Left
        image_index = 2;
        break;
    case 1: //Rigt
        image_xscale = 1;
        image_index = 0;
        break;
    case 2: //Left and Down
        image_index = 1;
        break;
    case 3: //Down
        image_index = 1;
        break;
    case 4: //Down and Right
        image_index = 1;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dis = distance_to_object(obj_body);

///Wooble
t = (t + inc) mod 360;
shift = amp * sin(degtorad(t));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exist
if place_meeting(x,y,obj_ppon) and k == false{
    image_speed = 0.3;
    k = true;
    
    global.combat += 1;

}

if image_index &gt;= 4 and go == false{
    go = true;
    sprite_index = spr_skull_o;
    image_speed = 0;
    image_index = 5;
    state = 1;
}

if go == true{
    visible = true;
    depth = -y-64;
    
    /// Enemy States
    if (state == 1 or state == 2){
        sprite_index = spr_skull_o;
        if dis &lt; 185{
            state = 1;

        }else if dis &gt; 215{
            state = 2;
        }else {
            state = 0;
        }
    }
    
    ///Enemy Behaevior
    switch(state){
        case 0:  //Flames
            sprite_index = spr_skull_f;
            
            off_x = 0;
            off_y = 0;
            
            if fl_dir == 'card' and casting == false{
                cont = 4;
                instance_create(x+24,y,obj_skull_fl);
                
                cont = 3;
                casting = true;
                
                alarm[6] = 0.20 * room_speed;
                
            }else if fl_dir == 'diag' and casting == false{
                cont = 4;
                instance_create(x+20,y+20,obj_skull_fl);
                
                cont = 3;
                casting = true;
                
                alarm[6] = 0.20 * room_speed;
                
            }
            
            hspd = 0;
            vspd = 0;
            
        break;
        case 2:  //Get closer
            //Get hspd and vspd
            dir = point_direction(x,y,obj_body.x,obj_body.y);
            hspd = lengthdir_x(e_spd,dir);
            vspd = lengthdir_y(e_spd,dir);
            
            off_x = sign(obj_body.x - x);
            off_y = sign(obj_body.y - y);
            
        break;
        case 1:  //Run away   
            //Get hspd and vspd
            dir = point_direction(obj_body.x,obj_body.y,x,y);
            hspd = lengthdir_x(e_spd,dir);
            vspd = lengthdir_y(e_spd,dir);
            
            off_x = sign(obj_body.x - x);
            off_y = sign(obj_body.y - y);

        break;
    }
    
    phy_position_x += hspd;
    phy_position_y += vspd;
    
    ///Get Damaged
    image_blend = c_white;
    if(place_meeting(x,y,obj_swing)){
        e_hp -= global.p_atk div e_def;
        damaged = true;
    }
    
    if(place_meeting(x,y,obj_sword_t) and obj_sword_t.image_speed&gt;0){
        e_hp -= global.p_satk div e_sdef;
        damaged = true;
    }
    
    if damaged == true{
        if flash == false{
            alarm[4] = 20;
            flash = true;
            image_blend = c_red;
        }
    }
    
    ///Die
    if(e_hp &lt;= 0){
        global.combat -= 1;
        instance_destroy();
        if((irandom(99) + 1) &lt;= 10){
            instance_create(x,y,obj_hheart);
                
        }else if((irandom(99) + 1) == 1){
            instance_create(x,y,obj_fheart);
                
        }
    }
    
    go = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_body">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(atk_cd == false and global.p_inv == false){
    global.p_hp -= e_atk div global.p_def;
    atk_cd = true;
    alarm[0] = 1.5*room_speed;
    global.p_inv = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_kb">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = point_direction(obj_kb.x,obj_kb.y,x,y);
var x_f = lengthdir_x(30,dir);
var y_f = lengthdir_y(30,dir);
    

physics_apply_impulse(x,y,x_f,y_f);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sword_t">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_left">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//should do
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_down">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//should do
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_up">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//should do
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_right">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//should do
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>14,6</point>
  </PhysicsShapePoints>
</object>
