<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1569325055</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Start
window_set_fullscreen(true);
global.MonitorW = display_get_width();
global.MonitorH = display_get_height();
show_debug_message(global.MonitorW);
show_debug_message(global.MonitorH);

once = false;

global.Xoffset = (global.MonitorW - 544)/2;
global.Yoffset = (global.MonitorH - 416)/2;

if global.MonitorW &gt;= 1088 and global.MonitorH &gt;= 832{
    surface_resize(application_surface,1088,832);
    global.Xoffset = (global.MonitorW - 1088)/2;
    global.Yoffset = (global.MonitorH - 832)/2;
}else if global.MonitorW &gt;= 1632 and global.MonitorH &gt;= 1248{
    surface_resize(application_surface,1632,1248);
    global.Xoffset = (global.MonitorW - 1632)/2;
    global.Yoffset = (global.MonitorH - 1248)/2;
}else if global.MonitorW &gt;= 2176 and global.MonitorH &gt;= 1672{
    surface_resize(application_surface,2176,1672);
    global.Xoffset = (global.MonitorW - 2176)/2;
    global.Yoffset = (global.MonitorH - 1672)/2;
}else if global.MonitorW &gt;= 2720 and global.MonitorH &gt;= 2080{
    surface_resize(application_surface,2720,2080);
    global.Xoffset = (global.MonitorW - 2720)/2;
    global.Yoffset = (global.MonitorH - 2080)/2;
}

//Particle System
global.ps=part_system_create();
scr_part_fire_init();
scr_part_smoke_init();
scr_part_cbits_init();    
scr_part_sflame_init();
scr_part_trail_init();
part_system_depth(global.ps,-room_height);


//Surface
global.lighting = surface_create(room_width,room_height);

surface_set_target(global.lighting);
draw_clear_alpha(c_black,0);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(application_surface) and room != rm_menu_1 and room != rm_dead{
    //Draw the game
    draw_surface_ext(application_surface,global.Xoffset,global.Yoffset,1,1,0,c_white,1);
}

//Draw the surface
if surface_exists(global.lighting) and room != rm_dead{
    surface_set_target(global.lighting);
    
    //Make it dark
    if room == rm_level or room == rm_boss{
        draw_set_colour(c_black);
        draw_set_alpha(0.2);
        draw_rectangle(0,0,room_width,room_height,0);
    }else {
        draw_set_colour(c_white);
        draw_set_alpha(1);
    }
    
    //Light sources
    
    ///Torch
    draw_set_blend_mode(bm_subtract);
    draw_set_colour(c_white);
    draw_set_alpha(0.3);
    
    with obj_torch{
        if lit == true{
            var a = round(sin(o));
            
            draw_sprite(spr_torch_light,dir,x+16,y+16+r);
            draw_sprite(spr_torch_light_s,dir,x+16,y+16+r);
        }
    }
    
    ///Skull Bullet
    draw_set_blend_mode(bm_subtract);
    draw_set_colour(c_red);
    
    if instance_exists(obj_skull_fl){
        with (obj_skull_fl) {
        
            draw_circle(x+hspd,y+vspd,16+r,false);
            draw_circle(x+hspd,y+vspd,26+r,false);
        }
    }
    
    //Resets
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
    surface_reset_target();
    
}else if room != rm_dead{
    global.lighting = surface_create(room_width,room_height);
    
    surface_set_target(global.lighting);
    
    draw_clear_alpha(c_black, 0);
    surface_reset_target();
}

if room = rm_dead and once == false{
once = true;
//Particles
part_type_destroy(global.pt_cbits)
part_type_destroy(global.pt_smoke)
part_type_destroy(global.pt_fire)
part_system_destroy(global.ps);

//Surface
if surface_exists(global.lighting){
    surface_free(global.lighting);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Particles
part_type_destroy(global.pt_cbits)
part_type_destroy(global.pt_smoke)
part_type_destroy(global.pt_fire)
part_system_destroy(global.ps);

//Surface
if surface_exists(global.lighting){
    surface_free(global.lighting);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the surface
if surface_exists(global.lighting){
    if view_current == 0{
        draw_surface(global.lighting,0,0);
    }
    
}else {
    global.lighting = surface_create(room_width, room_height);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
