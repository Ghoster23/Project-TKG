<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tumey_1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.bx = x;
global.by = y;
state = 0;
image_speed = 0.3;
d_alarm = false;
d_alarm_start = 0;
c_alarm = false;
phy_fixed_rotation = true;
inv = false;
d_cd = false;

global.b_mhp = 60;
global.b_hp = 60;
global.b_atk = 8;
global.b_s_atk = 6;
global.b_def = 3;
global.b_s_def = 3;
global.b_spd = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_cd = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>c_alarm = false;
d_alarm_start = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_alarm = false;
c_alarm = true;
alarm[2] = 2 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d_alarm = true;
d_alarm_start = false;
alarm[1] = 2.5 * room_speed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
x = phy_position_x;
y = phy_position_y;

if(place_meeting(x,y,obj_swing)){
    if(d_cd = false){
        global.b_hp -= global.p_atk div global.b_def;
        d_cd = true;
        alarm[4] = 1 * room_speed;
    }
}

///Determine action state
if(distance_to_object(obj_body) &gt; 364){
    state = 0;
}else if(distance_to_object(obj_body) &gt; 160 &amp;&amp; distance_to_object(obj_body) &lt; 364){
    state = 1;
}else if(distance_to_object(obj_body) &lt;=160  &amp;&amp; d_alarm == false &amp;&amp; c_alarm == false){
    state = 2;
    d_alarm_start += 1;
}else if(distance_to_object(obj_body) &lt;= 160 &amp;&amp; d_alarm == true){
    state = 0;
}else if(distance_to_object(obj_body) &lt;= 160 &amp;&amp; c_alarm == true){
    state = 1;
}

if(d_alarm_start == 1){
    alarm[0] = 1 * room_speed;
}

///Action state based changes
switch(state){
    case 0:
        global.b_spd = 0;
        image_speed = 0;
    break;
    case 1:
        global.b_spd = 0.75;
        image_speed = 0.3;
        phy_position_x += sign(obj_body.x - x)*global.b_spd;
        phy_position_y += sign(obj_body.y - y)*global.b_spd;
    break;
    case 2:
        global.b_spd = 10;
        image_speed = 0;
        image_index = 3;
        
        //Get direction
        dir = point_direction(x,y,obj_body.x,obj_body.y);

        //Get hspd and vspd
        hspd = lengthdir_x(global.b_spd,dir);
        vspd = lengthdir_y(global.b_spd,dir);
   
        //Move
        phy_position_x += hspd;
        phy_position_y += vspd;
    break;
}
           

///Phase
if(global.b_hp &lt;= 35){
        global.b_spd = 18;
        state = 3;
        
        //Get direction
        dir = point_direction(x,y,global.bx,global.by);

        //Get hspd and vspd
        hspd = lengthdir_x(global.b_spd,dir);
        vspd = lengthdir_y(global.b_spd,dir);

        //Move
        phy_position_x += hspd;
        phy_position_y += vspd;
        
        if(distance_to_point(global.bx,global.by)) &gt; 5{
            instance_destroy();
            instance_create(global.bx + 64, global.by, obj_tumey_2);
            instance_create(global.bx - 64, global.by, obj_tumey_2);
            
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_body">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state == 1 &amp;&amp; inv == false){
    global.p_hp -= global.b_atk div global.p_def;
    inv = true;
    alarm[3] = 1 * room_speed;
}else if(state == 2 &amp;&amp; inv == false){
    global.p_hp -= (global.b_atk * 2) div global.p_def;
    inv = true;
    alarm[3] = 1 * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sword_t">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_sword_t)){
    if(obj_sword_t.image_speed != 0 &amp;&amp; d_cd == false){
        global.b_hp -= (global.p_satk - global.b_s_def)*2;
        d_cd = true;
        alarm[4] = 1 * room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>500</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>96,0</point>
    <point>96,96</point>
    <point>0,96</point>
  </PhysicsShapePoints>
</object>
